openapi: 3.0.0
info:
  title: Challenge Introduction to Solid
  description: This is a challenge from Rocketseat Ignite NodeJS
  version: 1.0.0
  contact:
    email: rafaelmdurante@gmail.com
components:
  schemas:
    User:
      properties:
        id:
          type: string
          format: uuid
          description: The user ID
        name:
          type: string
          description: The user name
          example: John Doe
        admin:
          type: boolean
          description: True if admin or false if not admin
        email:
          type: string
          format: email
          description: The user's email
          example: john.doe@mail.com
        created_at:
          type: string
          format: date-time
          description: Date of creation
        updated_at:
          type: string
          format: date-time
          description: Date of last update
paths:
  /:
    get:
      tags:
        - Users
      summary: List all users
      parameters:
        - in: header
          name: user_id
          schema:
            type: string
            format: uuid
          required: true
      responses:
        200:
          description: A list of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              example:
                name: John Doe
                email: john.doe@example.com
      responses:
        201:
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Email already been taken
  /{user_id}:
    get:
      tags:
        - Users
      summary: Show user profile
      parameters:
        - in: path
          name: user_id
          required: true    
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: User not found
  /{user_id}/admin:
    patch:
      tags:
        - Users
      summary: Turn a user into admin
      parameters:
        - in: path
          name: user_id
          required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Cannot turn admin a non existing user

  